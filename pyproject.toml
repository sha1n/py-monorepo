[project]
name = "monorepo"
version = "0.1.0"
description = ""
authors = [
    {name = "sha1n", email = "sha1n@users.noreply.github.com"}
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "pytest>=8.3.3,<9",
]

[tool.poetry]
packages = [
    { include = "module_a", from = "modules/module-a/src" },
    { include = "module_b", from = "modules/module-b/src" },
]

[tool.poetry.dependencies]
module-a = { path = "./modules/module-a", develop = true }
module-b = { path = "./modules/module-b", develop = true }

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
ruff = "^0.7.0"
black = "^24.10.0"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--strict-markers"
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
markers = [
    "unit: unit tests",
    "integration: integration tests",
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.ruff]
lint.select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "PL" # pylint
]
lint.ignore = [
    "E501", # line too long, handled by black
    "PLR2004", # Magic value used in comparison
    "B008", # do not perform function calls in argument defaults
    "W291", # trailing whitespace
]
